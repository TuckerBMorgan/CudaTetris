; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R2Vgfw@@8					; Vgfw::`RTTI Base Class Array'
PUBLIC	??_7Vgfw@@6B@					; Vgfw::`vftable'
PUBLIC	??_R3Vgfw@@8					; Vgfw::`RTTI Class Hierarchy Descriptor'
PUBLIC	?default_palette@?1??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4PAIA ; `Vgfw::initialize'::`2'::default_palette
PUBLIC	??_R0?AVVgfw@@@8				; Vgfw `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@Vgfw@@8				; Vgfw::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Vgfw@@6B@					; Vgfw::`RTTI Complete Object Locator'
PUBLIC	??_C@_0BC@CECABNEH@Win32?5Guided?5Tour@		; `string'
PUBLIC	??_C@_0CA@PGPJAAEK@Call?5to?5RegisterClassEx?5failed?$CB@ ; `string'
PUBLIC	??_C@_0BN@MKLCKAMI@Call?5to?5CreateWindow?5failed?$CB@ ; `string'
PUBLIC	??_C@_15KNBIKKIN@?$AA?$CF?$AAd@			; `string'
PUBLIC	??_C@_04EFLKFJA@Vgfw@				; `string'
PUBLIC	??_C@_0BA@MKMNPBKH@JUST?5A?5HOT?5AWAY@		; `string'
PUBLIC	??_C@_1M@GINHBNC@?$AAh?$AAe?$AAl?$AAl?$AAo@	; `string'
EXTRN	__imp_SelectObject:PROC
EXTRN	__imp_SetPropA:PROC
EXTRN	__imp_CreateDIBSection:PROC
EXTRN	__imp__Xtime_get_ticks:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_LoadCursorA:PROC
EXTRN	__imp_CreateCompatibleDC:PROC
EXTRN	__imp_StretchBlt:PROC
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_IsWindow:PROC
EXTRN	__imp___stdio_common_vswprintf:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp_SetWindowTextA:PROC
EXTRN	__imp_MessageBoxA:PROC
EXTRN	__imp_DeleteDC:PROC
EXTRN	__imp_GetModuleHandleA:PROC
EXTRN	__imp_GetPropA:PROC
EXTRN	__imp_DefWindowProcA:PROC
EXTRN	__imp_CreateWindowExA:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp__wcsdup:PROC
EXTRN	__imp_SetDIBits:PROC
EXTRN	__imp_LoadIconA:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp_PeekMessageA:PROC
EXTRN	__imp_UnregisterClassA:PROC
EXTRN	__imp_DeleteObject:PROC
EXTRN	__imp_PostQuitMessage:PROC
EXTRN	__imp_SetPriorityClass:PROC
EXTRN	__imp_RegisterClassExA:PROC
EXTRN	__imp_InvalidateRect:PROC
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	__imp_BeginPaint:PROC
EXTRN	__imp_EndPaint:PROC
;	COMDAT ??_C@_1M@GINHBNC@?$AAh?$AAe?$AAl?$AAl?$AAo@
CONST	SEGMENT
??_C@_1M@GINHBNC@?$AAh?$AAe?$AAl?$AAl?$AAo@ DB 'h', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MKMNPBKH@JUST?5A?5HOT?5AWAY@
CONST	SEGMENT
??_C@_0BA@MKMNPBKH@JUST?5A?5HOT?5AWAY@ DB 'JUST A HOT AWAY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EFLKFJA@Vgfw@
CONST	SEGMENT
??_C@_04EFLKFJA@Vgfw@ DB 'Vgfw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_15KNBIKKIN@?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_15KNBIKKIN@?$AA?$CF?$AAd@ DB '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MKLCKAMI@Call?5to?5CreateWindow?5failed?$CB@
CONST	SEGMENT
??_C@_0BN@MKLCKAMI@Call?5to?5CreateWindow?5failed?$CB@ DB 'Call to Create'
	DB	'Window failed!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PGPJAAEK@Call?5to?5RegisterClassEx?5failed?$CB@
CONST	SEGMENT
??_C@_0CA@PGPJAAEK@Call?5to?5RegisterClassEx?5failed?$CB@ DB 'Call to Reg'
	DB	'isterClassEx failed!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CECABNEH@Win32?5Guided?5Tour@
CONST	SEGMENT
??_C@_0BC@CECABNEH@Win32?5Guided?5Tour@ DB 'Win32 Guided Tour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R4Vgfw@@6B@
rdata$r	SEGMENT
??_R4Vgfw@@6B@ DD 01H					; Vgfw::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVVgfw@@@8
	DD	imagerel ??_R3Vgfw@@8
	DD	imagerel ??_R4Vgfw@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Vgfw@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Vgfw@@8 DD imagerel ??_R0?AVVgfw@@@8	; Vgfw::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Vgfw@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVgfw@@@8
data$r	SEGMENT
??_R0?AVVgfw@@@8 DQ FLAT:??_7type_info@@6B@		; Vgfw `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVVgfw@@', 00H
data$r	ENDS
;	COMDAT ?default_palette@?1??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4PAIA
CONST	SEGMENT
?default_palette@?1??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4PAIA DD 00H ; `Vgfw::initialize'::`2'::default_palette
	DD	0a8H
	DD	0a800H
	DD	0a8a8H
	DD	0a80000H
	DD	0a800a8H
	DD	0a85400H
	DD	0a8a8a8H
	DD	0545454H
	DD	05454fcH
	DD	054fc54H
	DD	054fcfcH
	DD	0fc5454H
	DD	0fc54fcH
	DD	0fcfc54H
	DD	0fcfcfcH
	DD	00H
	DD	0141414H
	DD	0202020H
	DD	02c2c2cH
	DD	0383838H
	DD	0444444H
	DD	0505050H
	DD	0606060H
	DD	0707070H
	DD	0808080H
	DD	0909090H
	DD	0a0a0a0H
	DD	0b4b4b4H
	DD	0c8c8c8H
	DD	0e0e0e0H
	DD	0fcfcfcH
	DD	0fcH
	DD	04000fcH
	DD	07c00fcH
	DD	0bc00fcH
	DD	0fc00fcH
	DD	0fc00bcH
	DD	0fc007cH
	DD	0fc0040H
	DD	0fc0000H
	DD	0fc4000H
	DD	0fc7c00H
	DD	0fcbc00H
	DD	0fcfc00H
	DD	0bcfc00H
	DD	07cfc00H
	DD	040fc00H
	DD	0fc00H
	DD	0fc40H
	DD	0fc7cH
	DD	0fcbcH
	DD	0fcfcH
	DD	0bcfcH
	DD	07cfcH
	DD	040fcH
	DD	07c7cfcH
	DD	09c7cfcH
	DD	0bc7cfcH
	DD	0dc7cfcH
	DD	0fc7cfcH
	DD	0fc7cdcH
	DD	0fc7cbcH
	DD	0fc7c9cH
	DD	0fc7c7cH
	DD	0fc9c7cH
	DD	0fcbc7cH
	DD	0fcdc7cH
	DD	0fcfc7cH
	DD	0dcfc7cH
	DD	0bcfc7cH
	DD	09cfc7cH
	DD	07cfc7cH
	DD	07cfc9cH
	DD	07cfcbcH
	DD	07cfcdcH
	DD	07cfcfcH
	DD	07cdcfcH
	DD	07cbcfcH
	DD	07c9cfcH
	DD	0b4b4fcH
	DD	0c4b4fcH
	DD	0d8b4fcH
	DD	0e8b4fcH
	DD	0fcb4fcH
	DD	0fcb4e8H
	DD	0fcb4d8H
	DD	0fcb4c4H
	DD	0fcb4b4H
	DD	0fcc4b4H
	DD	0fcd8b4H
	DD	0fce8b4H
	DD	0fcfcb4H
	DD	0e8fcb4H
	DD	0d8fcb4H
	DD	0c4fcb4H
	DD	0b4fcb4H
	DD	0b4fcc4H
	DD	0b4fcd8H
	DD	0b4fce8H
	DD	0b4fcfcH
	DD	0b4e8fcH
	DD	0b4d8fcH
	DD	0b4c4fcH
	DD	070H
	DD	01c0070H
	DD	0380070H
	DD	0540070H
	DD	0700070H
	DD	0700054H
	DD	0700038H
	DD	070001cH
	DD	0700000H
	DD	0701c00H
	DD	0703800H
	DD	0705400H
	DD	0707000H
	DD	0547000H
	DD	0387000H
	DD	01c7000H
	DD	07000H
	DD	0701cH
	DD	07038H
	DD	07054H
	DD	07070H
	DD	05470H
	DD	03870H
	DD	01c70H
	DD	0383870H
	DD	0443870H
	DD	0543870H
	DD	0603870H
	DD	0703870H
	DD	0703860H
	DD	0703854H
	DD	0703844H
	DD	0703838H
	DD	0704438H
	DD	0705438H
	DD	0706038H
	DD	0707038H
	DD	0607038H
	DD	0547038H
	DD	0447038H
	DD	0387038H
	DD	0387044H
	DD	0387054H
	DD	0387060H
	DD	0387070H
	DD	0386070H
	DD	0385470H
	DD	0384470H
	DD	0505070H
	DD	0585070H
	DD	0605070H
	DD	0685070H
	DD	0705070H
	DD	0705068H
	DD	0705060H
	DD	0705058H
	DD	0705050H
	DD	0705850H
	DD	0706050H
	DD	0706850H
	DD	0707050H
	DD	0687050H
	DD	0607050H
	DD	0587050H
	DD	0507050H
	DD	0507058H
	DD	0507060H
	DD	0507068H
	DD	0507070H
	DD	0506870H
	DD	0506070H
	DD	0505870H
	DD	040H
	DD	0100040H
	DD	0200040H
	DD	0300040H
	DD	0400040H
	DD	0400030H
	DD	0400020H
	DD	0400010H
	DD	0400000H
	DD	0401000H
	DD	0402000H
	DD	0403000H
	DD	0404000H
	DD	0304000H
	DD	0204000H
	DD	0104000H
	DD	04000H
	DD	04010H
	DD	04020H
	DD	04030H
	DD	04040H
	DD	03040H
	DD	02040H
	DD	01040H
	DD	0202040H
	DD	0282040H
	DD	0302040H
	DD	0382040H
	DD	0402040H
	DD	0402038H
	DD	0402030H
	DD	0402028H
	DD	0402020H
	DD	0402820H
	DD	0403020H
	DD	0403820H
	DD	0404020H
	DD	0384020H
	DD	0304020H
	DD	0284020H
	DD	0204020H
	DD	0204028H
	DD	0204030H
	DD	0204038H
	DD	0204040H
	DD	0203840H
	DD	0203040H
	DD	0202840H
	DD	02c2c40H
	DD	0302c40H
	DD	0342c40H
	DD	03c2c40H
	DD	0402c40H
	DD	0402c3cH
	DD	0402c34H
	DD	0402c30H
	DD	0402c2cH
	DD	040302cH
	DD	040342cH
	DD	0403c2cH
	DD	040402cH
	DD	03c402cH
	DD	034402cH
	DD	030402cH
	DD	02c402cH
	DD	02c4030H
	DD	02c4034H
	DD	02c403cH
	DD	02c4040H
	DD	02c3c40H
	DD	02c3440H
	DD	02c3040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_R3Vgfw@@8
rdata$r	SEGMENT
??_R3Vgfw@@8 DD	00H					; Vgfw::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Vgfw@@8
rdata$r	ENDS
;	COMDAT ??_7Vgfw@@6B@
CONST	SEGMENT
??_7Vgfw@@6B@ DQ FLAT:??_R4Vgfw@@6B@			; Vgfw::`vftable'
	DQ	FLAT:??_EVgfw@@UEAAPEAXI@Z
	DQ	FLAT:?on_create@Vgfw@@UEAA_NXZ
	DQ	FLAT:?on_destroy@Vgfw@@UEAAXXZ
	DQ	FLAT:?on_update@Vgfw@@UEAA_NM@Z
CONST	ENDS
;	COMDAT ??_R2Vgfw@@8
rdata$r	SEGMENT
??_R2Vgfw@@8 DD	imagerel ??_R1A@?0A@EA@Vgfw@@8		; Vgfw::`RTTI Base Class Array'
	ORG $+3
PUBLIC	??$?0MX@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBM@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><float,void>
PUBLIC	??$duration_cast@V?$duration@MU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@MU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<float,std::ratio<1,1> >,__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?G_JU?$ratio@$00$0JIJGIA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,10000000>,__int64,std::ratio<1,10000000> >
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<float,std::ratio<1,1> >::duration<float,std::ratio<1,1> ><__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?GUsystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@AEBV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> >,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	?count@?$duration@MU?$ratio@$00$00@std@@@chrono@std@@QEBAMXZ ; std::chrono::duration<float,std::ratio<1,1> >::count
PUBLIC	??_GVgfw@@UEAAPEAXI@Z				; Vgfw::`scalar deleting destructor'
PUBLIC	??1Vgfw@@UEAA@XZ				; Vgfw::~Vgfw
PUBLIC	??0Vgfw@@QEAA@XZ				; Vgfw::Vgfw
PUBLIC	WinMain
PUBLIC	?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z	; Vgfw::window_proc
PUBLIC	?on_paint@Vgfw@@AEAA_JXZ			; Vgfw::on_paint
PUBLIC	?shutdown@Vgfw@@AEAAXXZ				; Vgfw::shutdown
PUBLIC	?quit@Vgfw@@QEAAXXZ				; Vgfw::quit
PUBLIC	?run@Vgfw@@QEAAXXZ				; Vgfw::run
PUBLIC	?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z ; Vgfw::initialize
PUBLIC	?on_update@Vgfw@@UEAA_NM@Z			; Vgfw::on_update
PUBLIC	?on_destroy@Vgfw@@UEAAXXZ			; Vgfw::on_destroy
PUBLIC	?on_create@Vgfw@@UEAA_NXZ			; Vgfw::on_create
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	printf
PUBLIC	_vfprintf_l
PUBLIC	swprintf
PUBLIC	_vswprintf_c_l
PUBLIC	__local_stdio_printf_options
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	??_EVgfw@@UEAAPEAXI@Z:PROC			; Vgfw::`vector deleting destructor'
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GVgfw@@UEAAPEAXI@Z DD imagerel $LN9@scalar
	DD	imagerel $LN9@scalar+33
	DD	imagerel $unwind$??_GVgfw@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vgfw@@QEAA@XZ DD imagerel $LN5@Vgfw
	DD	imagerel $LN5@Vgfw+137
	DD	imagerel $unwind$??0Vgfw@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$WinMain DD imagerel $LN9@WinMain
	DD	imagerel $LN9@WinMain+216
	DD	imagerel $unwind$WinMain
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN10
	DD	imagerel $LN10+551
	DD	imagerel $unwind$?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?on_paint@Vgfw@@AEAA_JXZ DD imagerel $LN4
	DD	imagerel $LN4+501
	DD	imagerel $unwind$?on_paint@Vgfw@@AEAA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?shutdown@Vgfw@@AEAAXXZ DD imagerel $LN18@shutdown
	DD	imagerel $LN18@shutdown+140
	DD	imagerel $unwind$?shutdown@Vgfw@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?run@Vgfw@@QEAAXXZ DD imagerel $LN106@run
	DD	imagerel $LN106@run+131
	DD	imagerel $unwind$?run@Vgfw@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?run@Vgfw@@QEAAXXZ DD imagerel $LN106@run+131
	DD	imagerel $LN106@run+417
	DD	imagerel $chain$1$?run@Vgfw@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?run@Vgfw@@QEAAXXZ DD imagerel $LN106@run+417
	DD	imagerel $LN106@run+544
	DD	imagerel $chain$2$?run@Vgfw@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z DD imagerel $LN19@initialize
	DD	imagerel $LN19@initialize+586
	DD	imagerel $unwind$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA DD imagerel ?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA
	DD	imagerel ?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD imagerel $LN9@now
	DD	imagerel $LN9@now+27
	DD	imagerel $unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6@printf
	DD	imagerel $LN6@printf+85
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4@vfprintf_l
	DD	imagerel $LN4@vfprintf_l+81
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf DD imagerel $LN6@swprintf
	DD	imagerel $LN6@swprintf+88
	DD	imagerel $unwind$swprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_c_l DD imagerel $LN4@vswprintf_
	DD	imagerel $LN4@vswprintf_+92
	DD	imagerel $unwind$_vswprintf_c_l
?szTitle@@3PADA DB 'Win32 Guided Tour Application', 00H	; szTitle
	ORG $+2
?szWindowClass@@3PADA DB 'win32app', 00H		; szWindowClass
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_c_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z DD imagerel ?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z+94
	DD	0ffffffffH
	DD	imagerel ?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z+117
	DD	00H
	DD	imagerel ?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z+521
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z DQ 00000000119930522r ; 2.33398e-314
	DD	imagerel $stateUnwindMap$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z
	DQ	00000000000000000r		; 0
	DD	03H
	DD	imagerel $ip2state$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z
	DQ	00000000000000060r		; 4.74303e-322
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z DD 092311H
	DD	01d6423H
	DD	01c541fH
	DD	01a341bH
	DD	018010fH
	DD	07008H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?initialize@Vgfw@@QEAA_NPEB_WPEAUHINSTANCE__@@HHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?run@Vgfw@@QEAAXXZ DD 021H
	DD	imagerel $LN106@run
	DD	imagerel $LN106@run+131
	DD	imagerel $unwind$?run@Vgfw@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?run@Vgfw@@QEAAXXZ DD 041021H
	DD	0277810H
	DD	0286808H
	DD	imagerel $LN106@run
	DD	imagerel $LN106@run+131
	DD	imagerel $unwind$?run@Vgfw@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?run@Vgfw@@QEAAXXZ DD 092919H
	DD	0576417H
	DD	0565417H
	DD	0553417H
	DD	0520117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	0260H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?shutdown@Vgfw@@AEAAXXZ DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?on_paint@Vgfw@@AEAA_JXZ DD 092819H
	DD	0a45416H
	DD	0a33416H
	DD	09e0116H
	DD	0700de00fH
	DD	0600cH
	DD	imagerel __GSHandlerCheck
	DD	04e0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z DD 072019H
	DD	09e010eH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	04e0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$WinMain DD 031b19H
	DD	0f60109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	07a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vgfw@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GVgfw@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\blockchainvirus\dropbox\code\cudatetris\cudatetris\backbuffercontroller.h
;	COMDAT ?on_paint@Vgfw@@AEAA_JXZ
_TEXT	SEGMENT
ps$ = 96
bmi_memory$ = 176
__$ArrayPad$ = 1248
this$ = 1296
?on_paint@Vgfw@@AEAA_JXZ PROC				; Vgfw::on_paint, COMDAT

; 376  : 	{

$LN4:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	49 89 5b 10	 mov	 QWORD PTR [r11+16], rbx
  00007	49 89 6b 18	 mov	 QWORD PTR [r11+24], rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	41 56		 push	 r14
  0000f	48 81 ec f0 04
	00 00		 sub	 rsp, 1264		; 000004f0H
  00016	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001d	48 33 c4	 xor	 rax, rsp
  00020	48 89 84 24 e0
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 377  : 		PAINTSTRUCT ps = {};

  00028	33 c0		 xor	 eax, eax

; 378  : 		HDC hDC = BeginPaint(m_hwnd, &ps);

  0002a	48 8d 54 24 60	 lea	 rdx, QWORD PTR ps$[rsp]
  0002f	48 89 44 24 60	 mov	 QWORD PTR ps$[rsp], rax
  00034	48 8b e9	 mov	 rbp, rcx
  00037	48 8b 89 30 03
	00 00		 mov	 rcx, QWORD PTR [rcx+816]
  0003e	48 89 44 24 68	 mov	 QWORD PTR ps$[rsp+8], rax
  00043	48 89 44 24 70	 mov	 QWORD PTR ps$[rsp+16], rax
  00048	48 89 44 24 78	 mov	 QWORD PTR ps$[rsp+24], rax
  0004d	49 89 83 78 fb
	ff ff		 mov	 QWORD PTR [r11-1160], rax
  00054	49 89 83 80 fb
	ff ff		 mov	 QWORD PTR [r11-1152], rax
  0005b	49 89 83 88 fb
	ff ff		 mov	 QWORD PTR [r11-1144], rax
  00062	49 89 83 90 fb
	ff ff		 mov	 QWORD PTR [r11-1136], rax
  00069	49 89 83 98 fb
	ff ff		 mov	 QWORD PTR [r11-1128], rax
  00070	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_BeginPaint

; 379  : 
; 380  : 		char bmi_memory[sizeof(BITMAPINFO) + 256 * sizeof(RGBQUAD)];
; 381  : 		BITMAPINFO* bmi = (BITMAPINFO*)bmi_memory;
; 382  : 		ZeroMemory(bmi, sizeof(BITMAPINFO));
; 383  : 		bmi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
; 384  : 		bmi->bmiHeader.biBitCount = 32;
; 385  : 		bmi->bmiHeader.biHeight = -screen_height;

  00076	44 8b 4d 0c	 mov	 r9d, DWORD PTR [rbp+12]
  0007a	0f 57 c0	 xorps	 xmm0, xmm0

; 386  : 		bmi->bmiHeader.biWidth = screen_width;
; 387  : 		bmi->bmiHeader.biPlanes = 1;
; 388  : 		//memcpy(bmi->bmiColors, m_palette, 256 * sizeof(RGBQUAD));
; 389  : 		
; 390  : 
; 391  : 		count++;
; 392  : 		
; 393  : 		rayTraceEnviroment->ray_tracing_main(m_framebuffer[m_frontbuffer], screen_width, screen_height, count);

  0007d	48 63 95 60 03
	00 00		 movsxd	 rdx, DWORD PTR [rbp+864]
  00084	41 8b c9	 mov	 ecx, r9d
  00087	44 8b 45 08	 mov	 r8d, DWORD PTR [rbp+8]
  0008b	f7 d9		 neg	 ecx
  0008d	ff 85 20 03 00
	00		 inc	 DWORD PTR [rbp+800]
  00093	45 33 f6	 xor	 r14d, r14d
  00096	89 8c 24 b8 00
	00 00		 mov	 DWORD PTR bmi_memory$[rsp+8], ecx
  0009d	48 8b f0	 mov	 rsi, rax
  000a0	48 8b 4d 18	 mov	 rcx, QWORD PTR [rbp+24]
  000a4	66 0f 7f 84 24
	c0 00 00 00	 movdqa	 XMMWORD PTR bmi_memory$[rsp+16], xmm0
  000ad	4c 89 b4 24 d0
	00 00 00	 mov	 QWORD PTR bmi_memory$[rsp+32], r14
  000b5	44 89 b4 24 d8
	00 00 00	 mov	 DWORD PTR bmi_memory$[rsp+40], r14d
  000bd	c7 84 24 b0 00
	00 00 28 00 00
	00		 mov	 DWORD PTR bmi_memory$[rsp], 40 ; 00000028H
  000c8	c7 84 24 bc 00
	00 00 01 00 20
	00		 mov	 DWORD PTR bmi_memory$[rsp+12], 2097153 ; 00200001H
  000d3	44 89 84 24 b4
	00 00 00	 mov	 DWORD PTR bmi_memory$[rsp+4], r8d
  000db	48 8b 94 d5 50
	03 00 00	 mov	 rdx, QWORD PTR [rbp+rdx*8+848]
  000e3	e8 00 00 00 00	 call	 ?ray_tracing_main@RaytraceEnviroment@@QEAAHPEAIHHH@Z ; RaytraceEnviroment::ray_tracing_main

; 394  : 		HDC hMemDC = CreateCompatibleDC(hDC);

  000e8	48 8b ce	 mov	 rcx, rsi
  000eb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateCompatibleDC

; 395  : 		
; 396  : 		HBITMAP hBitmap = CreateDIBSection(hMemDC, bmi, DIB_RGB_COLORS, NULL, NULL, 0);

  000f1	44 89 74 24 28	 mov	 DWORD PTR [rsp+40], r14d
  000f6	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR bmi_memory$[rsp]
  000fe	48 8b c8	 mov	 rcx, rax
  00101	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00106	45 33 c9	 xor	 r9d, r9d
  00109	45 33 c0	 xor	 r8d, r8d
  0010c	48 8b f8	 mov	 rdi, rax
  0010f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateDIBSection

; 397  : 		//HBITMAP hBitmap = CreateCompatibleBitmap(hMemDC, screen_width, screen_height);
; 398  : 		SetDIBits(hDC, hBitmap, 0, screen_height, m_framebuffer[m_frontbuffer], bmi, DIB_RGB_COLORS);

  00115	48 63 8d 60 03
	00 00		 movsxd	 rcx, DWORD PTR [rbp+864]
  0011c	45 33 c0	 xor	 r8d, r8d
  0011f	44 8b 4d 0c	 mov	 r9d, DWORD PTR [rbp+12]
  00123	48 8b d8	 mov	 rbx, rax
  00126	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR bmi_memory$[rsp]
  0012e	44 89 74 24 30	 mov	 DWORD PTR [rsp+48], r14d
  00133	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00138	48 8b d3	 mov	 rdx, rbx
  0013b	48 8b 8c cd 50
	03 00 00	 mov	 rcx, QWORD PTR [rbp+rcx*8+848]
  00143	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00148	48 8b ce	 mov	 rcx, rsi
  0014b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetDIBits

; 399  : 		
; 400  : 		HBITMAP hOldBitmap = (HBITMAP)SelectObject(hMemDC, hBitmap);

  00151	48 8b d3	 mov	 rdx, rbx
  00154	48 8b cf	 mov	 rcx, rdi
  00157	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject

; 401  : 		StretchBlt(hDC, 0, 0, window_width, window_height, hMemDC, 0, 0, screen_width, screen_height, SRCCOPY);

  0015d	8b 45 0c	 mov	 eax, DWORD PTR [rbp+12]
  00160	45 33 c0	 xor	 r8d, r8d
  00163	44 8b 4d 10	 mov	 r9d, DWORD PTR [rbp+16]
  00167	33 d2		 xor	 edx, edx
  00169	c7 44 24 50 20
	00 cc 00	 mov	 DWORD PTR [rsp+80], 13369376 ; 00cc0020H
  00171	48 8b ce	 mov	 rcx, rsi
  00174	89 44 24 48	 mov	 DWORD PTR [rsp+72], eax
  00178	8b 45 08	 mov	 eax, DWORD PTR [rbp+8]
  0017b	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  0017f	8b 45 14	 mov	 eax, DWORD PTR [rbp+20]
  00182	44 89 74 24 38	 mov	 DWORD PTR [rsp+56], r14d
  00187	44 89 74 24 30	 mov	 DWORD PTR [rsp+48], r14d
  0018c	48 89 7c 24 28	 mov	 QWORD PTR [rsp+40], rdi
  00191	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00195	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_StretchBlt

; 402  : 
; 403  : 		SelectObject(hMemDC, hBitmap);

  0019b	48 8b d3	 mov	 rdx, rbx
  0019e	48 8b cf	 mov	 rcx, rdi
  001a1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject

; 404  : 		DeleteObject(hBitmap);

  001a7	48 8b cb	 mov	 rcx, rbx
  001aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteObject

; 405  : 		DeleteDC(hMemDC);

  001b0	48 8b cf	 mov	 rcx, rdi
  001b3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteDC

; 406  : 
; 407  : 		EndPaint(m_hwnd, &ps);

  001b9	48 8d 54 24 60	 lea	 rdx, QWORD PTR ps$[rsp]
  001be	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR [rbp+816]
  001c5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_EndPaint

; 408  : 		return (LRESULT)0;

  001cb	33 c0		 xor	 eax, eax

; 409  : 	}

  001cd	48 8b 8c 24 e0
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001d5	48 33 cc	 xor	 rcx, rsp
  001d8	e8 00 00 00 00	 call	 __security_check_cookie
  001dd	4c 8d 9c 24 f0
	04 00 00	 lea	 r11, QWORD PTR [rsp+1264]
  001e5	49 8b 5b 28	 mov	 rbx, QWORD PTR [r11+40]
  001e9	49 8b 6b 30	 mov	 rbp, QWORD PTR [r11+48]
  001ed	49 8b e3	 mov	 rsp, r11
  001f0	41 5e		 pop	 r14
  001f2	5f		 pop	 rdi
  001f3	5e		 pop	 rsi
  001f4	c3		 ret	 0
?on_paint@Vgfw@@AEAA_JXZ ENDP				; Vgfw::on_paint
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\blockchainvirus\dropbox\code\cudatetris\cudatetris\backbuffercontroller.h
;	COMDAT ?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
ps$1 = 96
bmi_memory$2 = 176
__$ArrayPad$ = 1248
hwnd$ = 1312
msg$ = 1320
wparam$ = 1328
lparam$ = 1336
?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z PROC		; Vgfw::window_proc, COMDAT

; 412  : 	{

$LN10:
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	48 81 ec f0 04
	00 00		 sub	 rsp, 1264		; 000004f0H
  0000e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00015	48 33 c4	 xor	 rax, rsp
  00018	48 89 84 24 e0
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00020	8b fa		 mov	 edi, edx
  00022	4d 8b f1	 mov	 r14, r9

; 413  : 		Vgfw* vgfw = (Vgfw*)GetProp(hwnd, "Vgfw");

  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04EFLKFJA@Vgfw@
  0002c	49 8b f0	 mov	 rsi, r8
  0002f	48 8b d9	 mov	 rbx, rcx
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetPropA
  00038	48 8b e8	 mov	 rbp, rax

; 414  : 		
; 415  : 		switch (msg)

  0003b	83 ff 0f	 cmp	 edi, 15
  0003e	74 16		 je	 SHORT $LN4@window_pro

; 421  : 		}
; 422  : 		case WM_DESTROY:
; 423  : 			break;
; 424  : 		}
; 425  : 
; 426  : 		return DefWindowProc(hwnd, msg, wparam, lparam);

  00040	4d 8b ce	 mov	 r9, r14
  00043	4c 8b c6	 mov	 r8, rsi
  00046	8b d7		 mov	 edx, edi
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcA
  00051	e9 b3 01 00 00	 jmp	 $LN1@window_pro
$LN4@window_pro:

; 416  : 		{
; 417  : 		case WM_PAINT:
; 418  : 		{
; 419  : 			printf("JUST A HOT AWAY");

  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@MKMNPBKH@JUST?5A?5HOT?5AWAY@
  0005d	e8 00 00 00 00	 call	 printf

; 378  : 		HDC hDC = BeginPaint(m_hwnd, &ps);

  00062	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR [rbp+816]
  00069	48 8d 54 24 60	 lea	 rdx, QWORD PTR ps$1[rsp]
  0006e	33 c0		 xor	 eax, eax
  00070	48 89 44 24 60	 mov	 QWORD PTR ps$1[rsp], rax
  00075	48 89 44 24 68	 mov	 QWORD PTR ps$1[rsp+8], rax
  0007a	48 89 44 24 70	 mov	 QWORD PTR ps$1[rsp+16], rax
  0007f	48 89 44 24 78	 mov	 QWORD PTR ps$1[rsp+24], rax
  00084	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR ps$1[rsp+32], rax
  0008c	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR ps$1[rsp+40], rax
  00094	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR ps$1[rsp+48], rax
  0009c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR ps$1[rsp+56], rax
  000a4	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR ps$1[rsp+64], rax
  000ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_BeginPaint

; 379  : 
; 380  : 		char bmi_memory[sizeof(BITMAPINFO) + 256 * sizeof(RGBQUAD)];
; 381  : 		BITMAPINFO* bmi = (BITMAPINFO*)bmi_memory;
; 382  : 		ZeroMemory(bmi, sizeof(BITMAPINFO));
; 383  : 		bmi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
; 384  : 		bmi->bmiHeader.biBitCount = 32;
; 385  : 		bmi->bmiHeader.biHeight = -screen_height;

  000b2	44 8b 4d 0c	 mov	 r9d, DWORD PTR [rbp+12]
  000b6	0f 57 c0	 xorps	 xmm0, xmm0

; 386  : 		bmi->bmiHeader.biWidth = screen_width;
; 387  : 		bmi->bmiHeader.biPlanes = 1;
; 388  : 		//memcpy(bmi->bmiColors, m_palette, 256 * sizeof(RGBQUAD));
; 389  : 		
; 390  : 
; 391  : 		count++;
; 392  : 		
; 393  : 		rayTraceEnviroment->ray_tracing_main(m_framebuffer[m_frontbuffer], screen_width, screen_height, count);

  000b9	48 63 95 60 03
	00 00		 movsxd	 rdx, DWORD PTR [rbp+864]
  000c0	41 8b c9	 mov	 ecx, r9d
  000c3	44 8b 45 08	 mov	 r8d, DWORD PTR [rbp+8]
  000c7	f7 d9		 neg	 ecx
  000c9	ff 85 20 03 00
	00		 inc	 DWORD PTR [rbp+800]
  000cf	45 33 f6	 xor	 r14d, r14d
  000d2	89 8c 24 b8 00
	00 00		 mov	 DWORD PTR bmi_memory$2[rsp+8], ecx
  000d9	48 8b f0	 mov	 rsi, rax
  000dc	48 8b 4d 18	 mov	 rcx, QWORD PTR [rbp+24]
  000e0	66 0f 7f 84 24
	c0 00 00 00	 movdqa	 XMMWORD PTR bmi_memory$2[rsp+16], xmm0
  000e9	4c 89 b4 24 d0
	00 00 00	 mov	 QWORD PTR bmi_memory$2[rsp+32], r14
  000f1	44 89 b4 24 d8
	00 00 00	 mov	 DWORD PTR bmi_memory$2[rsp+40], r14d
  000f9	c7 84 24 b0 00
	00 00 28 00 00
	00		 mov	 DWORD PTR bmi_memory$2[rsp], 40 ; 00000028H
  00104	c7 84 24 bc 00
	00 00 01 00 20
	00		 mov	 DWORD PTR bmi_memory$2[rsp+12], 2097153 ; 00200001H
  0010f	44 89 84 24 b4
	00 00 00	 mov	 DWORD PTR bmi_memory$2[rsp+4], r8d
  00117	48 8b 94 d5 50
	03 00 00	 mov	 rdx, QWORD PTR [rbp+rdx*8+848]
  0011f	e8 00 00 00 00	 call	 ?ray_tracing_main@RaytraceEnviroment@@QEAAHPEAIHHH@Z ; RaytraceEnviroment::ray_tracing_main

; 394  : 		HDC hMemDC = CreateCompatibleDC(hDC);

  00124	48 8b ce	 mov	 rcx, rsi
  00127	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateCompatibleDC

; 395  : 		
; 396  : 		HBITMAP hBitmap = CreateDIBSection(hMemDC, bmi, DIB_RGB_COLORS, NULL, NULL, 0);

  0012d	44 89 74 24 28	 mov	 DWORD PTR [rsp+40], r14d
  00132	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR bmi_memory$2[rsp]
  0013a	48 8b c8	 mov	 rcx, rax
  0013d	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00142	45 33 c9	 xor	 r9d, r9d
  00145	45 33 c0	 xor	 r8d, r8d
  00148	48 8b f8	 mov	 rdi, rax
  0014b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateDIBSection

; 397  : 		//HBITMAP hBitmap = CreateCompatibleBitmap(hMemDC, screen_width, screen_height);
; 398  : 		SetDIBits(hDC, hBitmap, 0, screen_height, m_framebuffer[m_frontbuffer], bmi, DIB_RGB_COLORS);

  00151	48 63 8d 60 03
	00 00		 movsxd	 rcx, DWORD PTR [rbp+864]
  00158	45 33 c0	 xor	 r8d, r8d
  0015b	44 8b 4d 0c	 mov	 r9d, DWORD PTR [rbp+12]
  0015f	48 8b d8	 mov	 rbx, rax
  00162	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR bmi_memory$2[rsp]
  0016a	44 89 74 24 30	 mov	 DWORD PTR [rsp+48], r14d
  0016f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00174	48 8b d3	 mov	 rdx, rbx
  00177	48 8b 8c cd 50
	03 00 00	 mov	 rcx, QWORD PTR [rbp+rcx*8+848]
  0017f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00184	48 8b ce	 mov	 rcx, rsi
  00187	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetDIBits

; 399  : 		
; 400  : 		HBITMAP hOldBitmap = (HBITMAP)SelectObject(hMemDC, hBitmap);

  0018d	48 8b d3	 mov	 rdx, rbx
  00190	48 8b cf	 mov	 rcx, rdi
  00193	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject

; 401  : 		StretchBlt(hDC, 0, 0, window_width, window_height, hMemDC, 0, 0, screen_width, screen_height, SRCCOPY);

  00199	8b 45 0c	 mov	 eax, DWORD PTR [rbp+12]
  0019c	45 33 c0	 xor	 r8d, r8d
  0019f	44 8b 4d 10	 mov	 r9d, DWORD PTR [rbp+16]
  001a3	33 d2		 xor	 edx, edx
  001a5	c7 44 24 50 20
	00 cc 00	 mov	 DWORD PTR [rsp+80], 13369376 ; 00cc0020H
  001ad	48 8b ce	 mov	 rcx, rsi
  001b0	89 44 24 48	 mov	 DWORD PTR [rsp+72], eax
  001b4	8b 45 08	 mov	 eax, DWORD PTR [rbp+8]
  001b7	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  001bb	8b 45 14	 mov	 eax, DWORD PTR [rbp+20]
  001be	44 89 74 24 38	 mov	 DWORD PTR [rsp+56], r14d
  001c3	44 89 74 24 30	 mov	 DWORD PTR [rsp+48], r14d
  001c8	48 89 7c 24 28	 mov	 QWORD PTR [rsp+40], rdi
  001cd	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  001d1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_StretchBlt

; 402  : 
; 403  : 		SelectObject(hMemDC, hBitmap);

  001d7	48 8b d3	 mov	 rdx, rbx
  001da	48 8b cf	 mov	 rcx, rdi
  001dd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SelectObject

; 404  : 		DeleteObject(hBitmap);

  001e3	48 8b cb	 mov	 rcx, rbx
  001e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteObject

; 405  : 		DeleteDC(hMemDC);

  001ec	48 8b cf	 mov	 rcx, rdi
  001ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteDC

; 406  : 
; 407  : 		EndPaint(m_hwnd, &ps);

  001f5	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR [rbp+816]
  001fc	48 8d 54 24 60	 lea	 rdx, QWORD PTR ps$1[rsp]
  00201	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_EndPaint

; 420  : 			return vgfw->on_paint();

  00207	33 c0		 xor	 eax, eax
$LN1@window_pro:

; 427  : 	}

  00209	48 8b 8c 24 e0
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00211	48 33 cc	 xor	 rcx, rsp
  00214	e8 00 00 00 00	 call	 __security_check_cookie
  00219	48 81 c4 f0 04
	00 00		 add	 rsp, 1264		; 000004f0H
  00220	41 5e		 pop	 r14
  00222	5f		 pop	 rdi
  00223	5e		 pop	 rsi
  00224	5d		 pop	 rbp
  00225	5b		 pop	 rbx
  00226	c3		 ret	 0
?window_proc@Vgfw@@CA_JPEAUHWND__@@I_K_J@Z ENDP		; Vgfw::window_proc
_TEXT	ENDS
END
